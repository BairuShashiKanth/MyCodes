import java.util.*;
import java.lang.*;
import java.io.*;
class prob{
    static List<Integer>mp[];
    static Map<Integer,Integer>df;
    public static int dfs(int ind,Set<Integer>st){
        if(df.containsKey(ind))return df.get(ind); 
        int max=1;
        st.add(ind);
        int k;
        if(mp[ind].size()==0){ df.put(ind,1); return 1;}
        for(int i=0;i<mp[ind].size();i++)
        { if(st.contains(mp[ind].get(i))) return -1; k=dfs(mp[ind].get(i),st); if(k==-1) return -1; max=Math.max(max,k);}
        df.put(ind,max+1);
        return df.get(ind);
        
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int l=sc.nextInt();
        mp=new LinkedList[l+1];
        df=new HashMap<Integer,Integer>();
        int d=sc.nextInt();
        for(int i=0;i<=l;i++) mp[i]=new LinkedList<>();
        int m,n;
        for(int i=0;i<d;i++){
        m=sc.nextInt();
        n=sc.nextInt();
        mp[n].add(m);}
        int max=1;
        int k;
        for(int i=0;i<=l;i++){
            k=dfs(i,new HashSet<Integer>());
            if(k==-1){ max=-1; break;}
            max=Math.max(max,k);
    }
    //for(int i=1;i<=l;i++) System.out.println(mp[i]);
    System.out.print(max);
}
}
