import java.util.*;
import java.io.*;
class pair{
    int x,y;
    pair(int x,int y){
        this.x=x;
        this.y=y;
    }
}
class prob{
    static int p,r;
    static void copy(int arr1[][],int arr2[][]){
        for(int i=0;i<p;i++){
            for(int j=0;j<r;j++){
                arr2[i][j]=arr1[i][j];
            }
        }
    }
    static int bfs(int grid[][]){
        Queue<pair>q=new LinkedList<>();
        int chain=0;
        int x,y;
        pair k;
        //for(int i=0;i<p;i++){ for(int j=0;j<r;j++){ System.out.print(grid[i][j]+" ");} System.out.println();}
        for(int i=0;i<p;i++){
            for(int j=0;j<r;j++){
                if(grid[i][j]==1){
                q.offer(new pair(i,j));
                while(q.size()!=0){
                k=q.poll(); x=k.x; y=k.y;
                if(x-1>=0&&grid[x-1][y]==1) q.offer(new pair(x-1,y));
                if(x+1<p&&grid[x+1][y]==1) q.offer(new pair(x+1,y));
                if(y-1>=0&&grid[x][y-1]==1) q.offer(new pair(x,y-1));
                if(y+1<r&&grid[x][y+1]==1) q.offer(new pair(x,y+1));
                grid[x][y]=0;
                }
                chain+=1;
            }
        }}
        return chain;
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n;
        p=sc.nextInt();
        r=sc.nextInt();
        n=sc.nextInt();
        List<Integer>l=new ArrayList<>();
        int grid[][]=new int[p][r];
        int grid_temp[][]=new int[p][r];
        for(int i=0;i<p;i++) for(int j=0;j<r;j++) grid[i][j]=0;
        for(int i=0;i<n;i++){
            grid[sc.nextInt()][sc.nextInt()]=1;
            copy(grid,grid_temp);
            l.add(bfs(grid_temp));
        }
        System.out.print(l);
    }
}
